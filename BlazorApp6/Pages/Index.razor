@page "/"
@using Firebase.Database
@using Firebase.Database.Query

<PageTitle>Proyecto Israel y José Carlos</PageTitle>



@code {
    private bool led = false;
    private bool estado = false;
    FirebaseClient firebase;

    private void InsertarEnDB()
    {
        led = !led;

        firebase.Child("data/example").PutAsync(new
        {
            led = this.led,
            estado = this.estado
        });
        
        Console.WriteLine("se inserto:" + led);
        this.StateHasChanged();
    }




    protected override async Task OnInitializedAsync()
    {
        firebase = new FirebaseClient("https://raspberry-9334f-default-rtdb.firebaseio.com/");

        var child = firebase
            .Child("data/example")
            .AsObservable<dynamic>()
            .Subscribe(async d =>
            {
                if (d.EventType == Firebase.Database.Streaming.FirebaseEventType.InsertOrUpdate)
                {
                    try
                    {
                        if (d.Key == "led")
                        {
                            bool newState = Convert.ToBoolean(d.Object);
                            led = newState;
                            await InvokeAsync(StateHasChanged);
                        }

                        if (d.Key == "estado")
                        {
                            bool newState = Convert.ToBoolean(d.Object);
                            this.estado = newState;
                           
                        }
                        

                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine($"Error al procesar el dato: {ex.Message}");
                    }
                }
            });
    }

    protected override void OnAfterRender(bool firstRender)
    {
        this.StateHasChanged();
        base.OnAfterRender(firstRender);
    }

}



@if(led)
    {
    <h2> Encendido</h2>
    }else
    {
    <h2>Apagado</h2>
    }

<label class="bb8-toggle">
    <input class="bb8-toggle__checkbox" type="checkbox" onchange="@InsertarEnDB" checked="@this.led">
    <div class="bb8-toggle__container">
        <div class="bb8-toggle__scenery">
            <div class="bb8-toggle__star"></div>
            <div class="bb8-toggle__star"></div>
            <div class="bb8-toggle__star"></div>
            <div class="bb8-toggle__star"></div>
            <div class="bb8-toggle__star"></div>
            <div class="bb8-toggle__star"></div>
            <div class="bb8-toggle__star"></div>
            <div class="tatto-1"></div>
            <div class="tatto-2"></div>
            <div class="gomrassen"></div>
            <div class="hermes"></div>
            <div class="chenini"></div>
            <div class="bb8-toggle__cloud"></div>
            <div class="bb8-toggle__cloud"></div>
            <div class="bb8-toggle__cloud"></div>
        </div>
        <div class="bb8">
            <div class="bb8__head-container">
                <div class="bb8__antenna"></div>
                <div class="bb8__antenna"></div>
                <div class="bb8__head"></div>
            </div>
            <div class="bb8__body"></div>
        </div>
        <div class="artificial__hidden">
            <div class="bb8__shadow"></div>
        </div>
    </div>
</label>

<br />
<br />

<Alerta IsVisible=this.estado></Alerta>

@if (estado)
{
    <h2>Detectado!</h2>
}

<style>
    body {
        background-color: #121212; /* Fondo oscuro */
        color: #ffffff; /* Color de texto para mejor legibilidad */
        margin: 0;
    }

    .page {
        display: flex;
        flex-direction: column;
        align-items: center; /* Centrar horizontalmente */
        justify-content: center; /* Centrar verticalmente */
        min-height: 100vh; /* Altura mínima para ocupar toda la pantalla */
    }

    main {
        width: 100%;
    }

    .content {
        display: flex;
        flex-direction: column;
        align-items: center; /* Centrar contenido horizontalmente */
        justify-content: center; /* Centrar contenido verticalmente */
        width: 100%;
    }

    .toggle-cont, .alerta-container {
        display: flex;
        flex-direction: column;
        align-items: center; /* Centrar contenido */
        margin-bottom: 20px; /* Espacio entre los elementos */
    }
</style>